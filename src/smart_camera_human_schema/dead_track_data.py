# automatically generated by the FlatBuffers compiler, do not modify

# namespace: SmartCamera

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class DeadTrackData(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DeadTrackData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDeadTrackData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # DeadTrackData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DeadTrackData
    def Age(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

    # DeadTrackData
    def DetailWatchTime(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .watch_time_pair import WatchTimePair

            obj = WatchTimePair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DeadTrackData
    def DetailWatchTimeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DeadTrackData
    def DetailWatchTimeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # DeadTrackData
    def DirectionYaw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # DeadTrackData
    def DirectionPitch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # DeadTrackData
    def Gender(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # DeadTrackData
    def StayTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Uint64Flags, o + self._tab.Pos
            )
        return 0

    # DeadTrackData
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Uint64Flags, o + self._tab.Pos
            )
        return 0

    # DeadTrackData
    def TrackId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DeadTrackData
    def WatchStartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(
                flatbuffers.number_types.Uint64Flags, o + self._tab.Pos
            )
        return 0

    # DeadTrackData
    def BboxCoords(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .head_box_data import HeadBoxData

            obj = HeadBoxData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None


def DeadTrackDataStart(builder):
    builder.StartObject(10)


def Start(builder):
    return DeadTrackDataStart(builder)


def DeadTrackDataAddAge(builder, age):
    builder.PrependInt16Slot(0, age, 0)


def AddAge(builder, age):
    return DeadTrackDataAddAge(builder, age)


def DeadTrackDataAddDetailWatchTime(builder, detailWatchTime):
    builder.PrependUOffsetTRelativeSlot(
        1, flatbuffers.number_types.UOffsetTFlags.py_type(detailWatchTime), 0
    )


def AddDetailWatchTime(builder, detailWatchTime):
    return DeadTrackDataAddDetailWatchTime(builder, detailWatchTime)


def DeadTrackDataStartDetailWatchTimeVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)


def StartDetailWatchTimeVector(builder, numElems):
    return DeadTrackDataStartDetailWatchTimeVector(builder, numElems)


def DeadTrackDataAddDirectionYaw(builder, directionYaw):
    builder.PrependInt8Slot(2, directionYaw, 0)


def AddDirectionYaw(builder, directionYaw):
    return DeadTrackDataAddDirectionYaw(builder, directionYaw)


def DeadTrackDataAddDirectionPitch(builder, directionPitch):
    builder.PrependInt8Slot(3, directionPitch, 0)


def AddDirectionPitch(builder, directionPitch):
    return DeadTrackDataAddDirectionPitch(builder, directionPitch)


def DeadTrackDataAddGender(builder, gender):
    builder.PrependInt8Slot(4, gender, 0)


def AddGender(builder, gender):
    return DeadTrackDataAddGender(builder, gender)


def DeadTrackDataAddStayTime(builder, stayTime):
    builder.PrependUint64Slot(5, stayTime, 0)


def AddStayTime(builder, stayTime):
    return DeadTrackDataAddStayTime(builder, stayTime)


def DeadTrackDataAddTimestamp(builder, timestamp):
    builder.PrependUint64Slot(6, timestamp, 0)


def AddTimestamp(builder, timestamp):
    return DeadTrackDataAddTimestamp(builder, timestamp)


def DeadTrackDataAddTrackId(builder, trackId):
    builder.PrependUOffsetTRelativeSlot(
        7, flatbuffers.number_types.UOffsetTFlags.py_type(trackId), 0
    )


def AddTrackId(builder, trackId):
    return DeadTrackDataAddTrackId(builder, trackId)


def DeadTrackDataAddWatchStartTime(builder, watchStartTime):
    builder.PrependUint64Slot(8, watchStartTime, 0)


def AddWatchStartTime(builder, watchStartTime):
    return DeadTrackDataAddWatchStartTime(builder, watchStartTime)


def DeadTrackDataAddBboxCoords(builder, bboxCoords):
    builder.PrependUOffsetTRelativeSlot(
        9, flatbuffers.number_types.UOffsetTFlags.py_type(bboxCoords), 0
    )


def AddBboxCoords(builder, bboxCoords):
    return DeadTrackDataAddBboxCoords(builder, bboxCoords)


def DeadTrackDataEnd(builder):
    return builder.EndObject()


def End(builder):
    return DeadTrackDataEnd(builder)
